#!/usr/bin/env bash

# shellcheck disable=SC2155

set -Eeuo pipefail
trap 'print_error ${BASH_SOURCE[0]} ${LINENO} ${?}' ERR

# Arguments
readonly SCRIPT_DIR="$(cd "$(dirname "${0}")" && pwd)"
readonly SCRIPT=$(basename "${0}")
readonly COMMAND="${1:-}"
readonly SIZE="${2:-1}"

# Settings
readonly DISK_PATH="/media/ramdisk"
readonly DISK_USER="rpedrielli"

print_usage()
{
    echo
    echo "Usage: ${SCRIPT} <command> [size]"
    echo
    echo "Commands:"
    echo "    create  [size]    Creates the ramdisk"
    echo "    delete            Deletes the ramdisk"
    echo
    echo "    size      The size in GB of the ramdisk (default: 1)"
    echo

    exit 1
}

echo_error()
{
    echo "$(tput setaf 1)${*}$(tput sgr0)"
}

print_error()
{
    local -r SOURCE_PATH="${1}"
    local -r LINE_NUMBER="${2}"
    local -r EXIT_STATUS="${3}"
    local -r CONTEXT_LINES="3"
    local -r SOURCE_CODE="$(pr -tn "${SOURCE_PATH}")"

    local RELATIVE_PATH="${SOURCE_PATH#"${SCRIPT_DIR}"}"
    local -r RELATIVE_PATH="${RELATIVE_PATH#/}"

    echo
    echo_error "$(tput bold)Error: command exited with status ${EXIT_STATUS} at ${RELATIVE_PATH}:${LINE_NUMBER}"

    tail -n +$((LINE_NUMBER - CONTEXT_LINES)) <<< "${SOURCE_CODE}" | head -n ${CONTEXT_LINES}
    echo_error "$(tput bold)$(tail -n +$((LINE_NUMBER)) <<< "${SOURCE_CODE}" | head -n 1)"
    tail -n +$((LINE_NUMBER + 1)) <<< "${SOURCE_CODE}" | head -n ${CONTEXT_LINES}
    echo

    exit 1
}

ramdisk_create()
{
    if [ -e ${DISK_PATH} ]; then
        echo "Ramdisk is already present"
        exit 1
    fi

    mkdir ${DISK_PATH}

    mount -t tmpfs -o "x-gvfs-show,x-gvfs-name=RamDisk,size=${SIZE}g" tmpfs ${DISK_PATH}

    chown -R ${DISK_USER}:${DISK_USER} ${DISK_PATH}

    echo "Ramdisk created"
    echo "    Path: ${DISK_PATH}"
    echo "    Size: ${SIZE}GB"
}

ramdisk_delete()
{
    if [ ! -e ${DISK_PATH} ]; then
        echo "Ramdisk not found"
        exit 1
    fi

    umount ${DISK_PATH} || true

    rmdir ${DISK_PATH}

    echo "Ramdisk deleted"
}

main()
{
    case ${COMMAND} in

        create)
            ramdisk_create
            ;;

        delete)
            ramdisk_delete
            ;;

        *)
            print_usage
            ;;

    esac
}

if [ ${EUID} != 0 ]; then
    exec sudo "$0" "$@"
else
    main
fi

#!/usr/bin/env bash

# shellcheck disable=SC2155

set -Eeuo pipefail
trap 'print_error ${BASH_SOURCE[0]} ${LINENO} ${?}' ERR

# Arguments
readonly SCRIPT_DIR="$(cd "$(dirname "${0}")" && pwd)"

# Settings
readonly TEMP_DIR="/tmp"
readonly INSTALL_DIR="/usr/local"
readonly APP_URL="https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
readonly APP="aws"

echo_info()
{
    echo "$(tput setaf 6)${*}$(tput sgr0)"
}

echo_error()
{
    echo "$(tput setaf 1)${*}$(tput sgr0)"
}

print_error()
{
    local -r SOURCE_PATH="${1}"
    local -r LINE_NUMBER="${2}"
    local -r EXIT_STATUS="${3}"
    local -r CONTEXT_LINES="3"
    local -r SOURCE_CODE="$(pr -tn "${SOURCE_PATH}")"

    local RELATIVE_PATH="${SOURCE_PATH#"${SCRIPT_DIR}"}"
    local -r RELATIVE_PATH="${RELATIVE_PATH#/}"

    echo
    echo_error "$(tput bold)Error: command exited with status ${EXIT_STATUS} at ${RELATIVE_PATH}:${LINE_NUMBER}"

    tail -n +$((LINE_NUMBER - CONTEXT_LINES)) <<< "${SOURCE_CODE}" | head -n ${CONTEXT_LINES}
    echo_error "$(tput bold)$(tail -n +$((LINE_NUMBER)) <<< "${SOURCE_CODE}" | head -n 1)"
    tail -n +$((LINE_NUMBER + 1)) <<< "${SOURCE_CODE}" | head -n ${CONTEXT_LINES}
    echo

    exit 1
}

check_bin()
{
    if ! command -v "${1}" &> /dev/null; then
        echo_error "Error: \"${1}\" is required but not installed."
        exit 1
    fi
}

print_version()
{
    local -r BIN="aws"

    if [ -z "${AWS_VERSION_OLD}" ]; then
        AWS_VERSION_OLD="None"
    fi

    if [ -z "${AWS_VERSION_NEW}" ]; then
        AWS_VERSION_NEW="Error getting the new version"
    fi

    if [ "${AWS_VERSION_OLD}" = "${AWS_VERSION_NEW}" ]; then
        echo "${BIN}: ${AWS_VERSION_NEW}"
    else
        echo "$(tput setaf 3)${BIN}: ${AWS_VERSION_OLD} -> ${AWS_VERSION_NEW}$(tput sgr0)"
    fi
}

main()
{
    check_bin sed
    check_bin curl
    check_bin unzip

    echo
    echo_info "Updating aws cli"

    AWS_VERSION_OLD="$(aws --version 2> /dev/null | sed 's|^[^/]*/\([^ ]*\) .*$|\1|')"

    curl -sSL "${APP_URL}" -o "${TEMP_DIR}/${APP}.zip"

    unzip -q -o "${TEMP_DIR}/${APP}.zip" -d "${TEMP_DIR}"
    rm -f "${TEMP_DIR}/${APP}.zip"

    sudo "${TEMP_DIR}/${APP}/install" --install-dir "${INSTALL_DIR}/aws-cli" \
                                      --bin-dir "${INSTALL_DIR}/bin" \
                                      --update > /dev/null

    rm -rf "${TEMP_DIR:?}/${APP}"

    AWS_VERSION_NEW="$(aws --version 2> /dev/null | sed 's|^[^/]*/\([^ ]*\) .*$|\1|')"

    echo_info "Purging old versions"

    pushd "${INSTALL_DIR}/aws-cli/v2" > /dev/null || exit 1

    readonly CURRENT_VERSION=$(basename "$(readlink -f current)")

    for INSTALLED_VERSION in *; do
        if [[ "${INSTALLED_VERSION}" != "current" && "${INSTALLED_VERSION}" != "${CURRENT_VERSION}" ]]; then
            sudo rm -rf "${INSTALLED_VERSION}"
        fi
    done

    popd > /dev/null || exit 1

    echo_info "Done"
    echo
}

main

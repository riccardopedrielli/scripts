#!/usr/bin/env bash

set -Eeu
trap 'echo "Error: ${SCRIPT} - Function: ${FUNCNAME:-global context} - Line: ${LINENO} - Status: ${?}"' ERR

# Arguments
# shellcheck disable=SC2155
readonly SCRIPT=$(basename "${0}")

echo_error()
{
    echo -e "\e[0;31m${*}\e[0m"
}

check_bin()
{
    if ! command -v "${1}" &> /dev/null; then
        echo_error "Error: \"${1}\" is required but not installed."
        exit 1
    fi
}

get_version()
{
    local -r BIN_PATH="${1}"
    local -r RAW_VERSION="$(${BIN_PATH} version 2> /dev/null || true)"

    echo "${RAW_VERSION}" \
        | grep -oE '(0|[1-9][[:digit:]]*)\.(0|[1-9][[:digit:]]*)\.(0|[1-9][[:digit:]]*)' \
        | head -n 1 \
        || true
}

print_version()
{
    local OLD_VERSION=${1:-}
    local NEW_VERSION=${2:-}

    if [ -z "${OLD_VERSION}" ]; then
        OLD_VERSION="none"
    fi

    if [ -z "${NEW_VERSION}" ]; then
        NEW_VERSION="error getting the new version"
    fi

    if [ "${OLD_VERSION}" = "${NEW_VERSION}" ]; then
        echo -e "Already at newest version: \e[0;32m${NEW_VERSION}\e[0m"
    else
        echo -e "Version updated: \e[0;33m${OLD_VERSION} -> ${NEW_VERSION}\e[0m"
    fi
}

install_app()
{
    local -r BIN_NAME="${1}"
    local -r DESTINATION_DIR="${2}"
    local -r GITHUB_PATH="${3}"
    local -r GITHUB_BIN_NAME="${4}"

    local -r BIN_PATH="${DESTINATION_DIR}/${BIN_NAME}"
    local -r URL="https://github.com/${GITHUB_PATH}/releases/latest/download/${GITHUB_BIN_NAME}"

    if [ ! -d "${DESTINATION_DIR}" ]; then
        mkdir -p "${DESTINATION_DIR}"
    fi


    echo "Install ${BIN_NAME}"

    local -r OLD_VERSION=$(get_version "${BIN_PATH}")

    curl -sSL "${URL}" -o "${BIN_PATH}"
    chmod +x "${BIN_PATH}"

    local -r NEW_VERSION=$(get_version "${BIN_PATH}")

    print_version "${OLD_VERSION}" "${NEW_VERSION}"
    echo
}

main()
{
    check_bin curl
    check_bin grep

    # Arguments  "binary"          "destination directory"        "github path"            "github binary name"
    install_app  "docker-compose"  "${HOME}/.docker/cli-plugins"  "docker/compose"         "docker-compose-linux-x86_64"
    install_app  "docker-compose"  "${HOME}/dev/bin"              "docker/compose-switch"  "docker-compose-linux-amd64"
}

main

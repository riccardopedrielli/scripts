#!/usr/bin/env bash

set -Eeu
trap 'echo "Error: ${SCRIPT} - Function: ${FUNCNAME:-global context} - Line: ${LINENO} - Status: ${?}"' ERR

# Arguments
# shellcheck disable=SC2155
readonly SCRIPT=$(basename "${0}")

# Settings
readonly TEMP_DIR="/tmp"
readonly INSTALL_DIR="/usr/local"
readonly APP_URL="https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip"
readonly APP="sam"

echo_error()
{
    echo -e "\e[0;31m${*}\e[0m"
}

check_bin()
{
    if ! command -v "${1}" &> /dev/null; then
        echo_error "Error: \"${1}\" is required but not installed."
        exit 1
    fi
}

print_version()
{
    local OLD_VERSION=${1:-}
    local NEW_VERSION=${2:-}

    if [ -z "${OLD_VERSION}" ]; then
        OLD_VERSION="none"
    fi

    if [ -z "${NEW_VERSION}" ]; then
        NEW_VERSION="error getting the new version"
    fi

    if [ "${OLD_VERSION}" = "${NEW_VERSION}" ]; then
        echo -e "Already at newest version: \e[0;32m${NEW_VERSION}\e[0m"
    else
        echo -e "Version updated: \e[0;33m${OLD_VERSION} -> ${NEW_VERSION}\e[0m"
    fi
}

main()
{
    check_bin sed
    check_bin curl
    check_bin unzip

    sudo -v

    echo "Installing ${APP} cli"

    local -r OLD_VERSION=$(${APP} --version 2> /dev/null | cut -d ' ' -f 4 || true)

    curl -sSL "${APP_URL}" -o "${TEMP_DIR}/${APP}.zip"

    unzip -q -o "${TEMP_DIR}/${APP}.zip" -d "${TEMP_DIR}/${APP}"
    rm -f "${TEMP_DIR}/${APP}.zip"

    sudo "${TEMP_DIR}/${APP}/install" --install-dir "${INSTALL_DIR}/${APP}-cli" \
                                      --bin-dir "${INSTALL_DIR}/bin" \
                                      --update > /dev/null

    rm -rf "${TEMP_DIR:?}/${APP}"

    local -r NEW_VERSION=$(${APP} --version 2> /dev/null | cut -d ' ' -f 4 || true)

    print_version "${OLD_VERSION}" "${NEW_VERSION}"

    pushd "${INSTALL_DIR}/${APP}-cli" > /dev/null || exit 1

    local -r CURRENT_VERSION=$(basename "$(readlink -f current)")

    for INSTALLED_VERSION in *; do
        if [[ "${INSTALLED_VERSION}" != "current" && "${INSTALLED_VERSION}" != "${CURRENT_VERSION}" ]]; then
            echo "Remove ${INSTALLED_VERSION}"
            sudo rm -rf "${INSTALLED_VERSION}"
        fi
    done

    popd > /dev/null || exit 1

    echo
}

main

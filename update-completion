#!/usr/bin/env bash

set -Eeuo pipefail
trap 'print_error ${?} ${LINENO}' ERR

# Arguments
# shellcheck disable=SC2155
readonly SCRIPT_DIR="$(cd "$(dirname "${0}")" && pwd)"
# shellcheck disable=SC2155
readonly SCRIPT=$(basename "${0}")

# Settings
readonly BASH_COMPLETION_DIR="${HOME}/dev/data/bash/completion"
readonly BASH_COMPLETIONS="helm kubectl"

# Functions
echo_info()
{
    echo "$(tput setaf 6)${*}$(tput sgr0)"
}

echo_error()
{
    echo "$(tput setaf 1)${*}$(tput sgr0)"
}

print_error()
{
    local -r CODE="$(pr -tn "${SCRIPT_DIR}/${SCRIPT}")"
    local -r STATUS="${1}"
    local -r LINE_NUMBER="${2}"
    local -r CONTEXT_LINES="3"

    echo
    echo_error "$(tput bold)Error: command exited with status ${STATUS} at ${SCRIPT}:${LINE_NUMBER}"

    tail -n +$((LINE_NUMBER - CONTEXT_LINES)) <<< "${CODE}" | head -n ${CONTEXT_LINES}
    echo_error "$(tput bold)$(tail -n +$((LINE_NUMBER)) <<< "${CODE}" | head -n 1)"
    tail -n +$((LINE_NUMBER + 1)) <<< "${CODE}" | head -n ${CONTEXT_LINES}
    echo
}

check_bash_version()
{
    local -r MINIMUM_VERSION="4"

    if [ "${BASH_VERSINFO[0]}" -lt "${MINIMUM_VERSION}" ]; then
        echo_error "Error: bash must be at least version ${MINIMUM_VERSION}, current version is ${BASH_VERSINFO[0]}"
        exit 1
    fi
}

check_bin()
{
    if ! command -v "${1}" &> /dev/null; then
        echo_error "Error: \"${1}\" not found."
        exit 1
    fi
}

main()
{
    check_bash_version

    echo
    echo_info "Generating bash completions"

    if [ ! -d "${BASH_COMPLETION_DIR}" ]; then
        mkdir -p "${BASH_COMPLETION_DIR}"
    fi

    rm -f "${BASH_COMPLETION_DIR}"/*

    for COMPLETION in ${BASH_COMPLETIONS}; do
        echo "Generating ${COMPLETION} completion"
        check_bin "${COMPLETION}"
        ${COMPLETION} completion bash > "${BASH_COMPLETION_DIR}/${COMPLETION}"
    done

    echo "Generating jfrog completion"
    check_bin jfrog
    export JFROG_CLI_HOME_DIR="${BASH_COMPLETION_DIR}"
    jfrog completion bash > /dev/null

    echo "Generating pip3 completion"
    check_bin pip3
    pip3 completion --bash > "${BASH_COMPLETION_DIR}/pip3"

    echo "Generating npm completion"
    check_bin npm
    npm completion > "${BASH_COMPLETION_DIR}/npm"

    echo "Generating yq completion"
    check_bin yq
    yq shell-completion bash > "${BASH_COMPLETION_DIR}/yq"

    echo_info "Operation completed"
    echo
}

main
